// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web.dataAccess.Data;

#nullable disable

namespace Web.dataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbConteXt))]
    partial class ApplicationDbConteXtModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Web.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrders")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrders = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrders = 2,
                            Name = "History"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrders = 3,
                            Name = "ASCHI"
                        });
                });

            modelBuilder.Entity("Web.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Billy Spark",
                            CategoryId = 1,
                            Description = "A thrilling adventure through time and space.",
                            ISBN = "123DASLFJ",
                            ImageUrl = "",
                            ListPrice = 99.0,
                            Price = 90.0,
                            Price100 = 85.0,
                            Price50 = 80.0,
                            Title = "Fortune of Time"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Jon Skeet",
                            CategoryId = 1,
                            Description = "A deep dive into the features of C# and how to use them effectively.",
                            ISBN = "987JSDKL45",
                            ImageUrl = "",
                            ListPrice = 60.0,
                            Price = 55.0,
                            Price100 = 48.0,
                            Price50 = 50.0,
                            Title = "C# in Depth"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Douglas Crockford",
                            CategoryId = 1,
                            Description = "An insightful guide to the best parts of JavaScript.",
                            ISBN = "456JKLDF89",
                            ImageUrl = "",
                            ListPrice = 45.0,
                            Price = 40.0,
                            Price100 = 30.0,
                            Price50 = 35.0,
                            Title = "JavaScript: The Good Parts"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Robert C. Martin",
                            CategoryId = 2,
                            Description = "A handbook of agile software craftsmanship.",
                            ISBN = "789KLJSD65",
                            ImageUrl = "",
                            ListPrice = 70.0,
                            Price = 65.0,
                            Price100 = 55.0,
                            Price50 = 60.0,
                            Title = "Clean Code"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Andrew Hunt, David Thomas",
                            CategoryId = 2,
                            Description = "Your journey to mastery in software development.",
                            ISBN = "159DFHJK33",
                            ImageUrl = "",
                            ListPrice = 80.0,
                            Price = 75.0,
                            Price100 = 65.0,
                            Price50 = 70.0,
                            Title = "The Pragmatic Programmer"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides",
                            CategoryId = 3,
                            Description = "A comprehensive guide to design patterns in software engineering.",
                            ISBN = "423JDSKLF23",
                            ImageUrl = "",
                            ListPrice = 95.0,
                            Price = 90.0,
                            Price100 = 80.0,
                            Price50 = 85.0,
                            Title = "Design Patterns: Elements of Reusable Object-Oriented Software"
                        });
                });

            modelBuilder.Entity("Web.Models.Product", b =>
                {
                    b.HasOne("Web.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });
#pragma warning restore 612, 618
        }
    }
}
